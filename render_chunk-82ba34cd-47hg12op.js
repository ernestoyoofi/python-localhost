//Language Switch
function Lang() {
   var Lang = document.getElementById("lang").value;
   var ID = document.getElementById("id");
   var EN = document.getElementById("en");
   if(Lang === "id") {
      ID.style.display = "inline";
      EN.style.display = "none";
   }else {
      ID.style.display = "none";
      EN.style.display = "inline";
   }
}
var Head = document.querySelector("head");
var Body = document.querySelector("body");

//Appended Elements
$("head").append("<meta name='viewport' content='width=device-width, initial-scale=1.0'/><link rel='preconnect' href='https://fonts.googleapis.com'><link rel='preconnect' href='https://fonts.gstatic.com' crossorigin><link href='https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,200;0,300;0,400;0,500;1,400&family=Inconsolata:wght@300;500&display=swap' rel='stylesheet'><title>Phython Web Server | python basics</title><script src='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js'></script> <link rel='stylesheet' href='https://ernestoyoofi.github.io/python-localhost/style.css'>");
$("body").append("<nav> <div class='nav-link'> <select onchange='Lang()' id='lang'> <option selected value='en'>English</option> <option value='id'>Indonesia</option> </select> <a href='https://pythonbasics.org/webserver/'>Python Basics <i class='fa-brands fa-python'></i></a> </div> </nav>");
$("body").append("<div id='en'> <div class='respon'> <div class='readme'> <section class='tag' id='create_a_python_web_server'> <h4>Create a Python Web Server <a href='#create_a_python_web_server'><i class='fa-solid fa-link'></i></a></h4> <hr> <p>A webserver in Python can be setup in two ways. Python supports a webserver out of the box. You can start a web server with a one liner.</p> <p class='space'></p> <p>But you can also create a custom web server which has unique functionality. In this article you'll learn how to do that.</p> <p class='space'></p> <p>The web server in this example can be accessed on your local network only. This can either be localhost or another network host. You could serve it cross location with a vpn.</p> </section> <section class='tag' id='example'> <h4>Example <a href='#example'><i class='fa-solid fa-link'></i></a></h4> <hr> <p>To start a webserver run the command below:</p> <p class='space'></p> <pre>python3 <span class='blue'>-m</span> <span class='green'>http.server</span></pre> <p class='space'></p> <p>That will open a webserver on port 8080. You can then open your browser at <a>http://127.0.0.1:8080/</a>. The webserver is also accessible over the network using your 192.168.-.- address.</p> <p class='space'></p> <p>This is a default server that you can use to download files from the machine.</p> </section> <section class='tag' id='web_server'>	<h4>Web Server <a href='#web_server'><i class='fa-solid fa-link'></i></a></h4>	<hr> <p>Run the code below to start a custom web server. To create a custom web server, we need to use the HTTP protocol.</p> <p class='space'></p> <p>By design the http protocol has a “get” request which returns a file on the server. If the file is found it will return 200.</p> <p class='space'></p> <p>The server will start at port 8080 and accept default web browser requests.</p> </section> </div> </div> </div> <div id='id' style='display:none'> <div class='respon'> <div class='readme'> <section class='tag' id='create_a_python_web_server_1'> <h4>Buat Server Web Menggunakan Python <a href='#create_a_python_web_server_1'><i class='fa-solid fa-link'></i></a></h4> <hr> <p>Server web dengan Python dapat diatur dengan dua cara. Python mendukung server web di luar kotak. Anda dapat memulai server web dengan satu liner.</p> <p class='space'></p> <p>Tetapi Anda juga dapat membuat server web khusus yang memiliki fungsi unik. Dalam artikel ini Anda akan belajar bagaimana melakukannya.</p> <p class='space'></p> <p>Server web dalam contoh ini hanya dapat diakses di jaringan lokal Anda. Ini bisa berupa localhost atau host jaringan lain. Anda bisa melayaninya lintas lokasi dengan vpn.</p> </section> <section class='tag' id='example_1'> <h4>Sample <a href='#example_1'><i class='fa-solid fa-link'></i></a></h4> <hr> <p>Server web bawaan Untuk memulai server web, jalankan perintah di bawah ini:</p> <p class='space'></p> <pre>python3 <span class='blue'>-m</span> <span class='green'>http.server</span></pre> <p class='space'></p> <p>Itu akan membuka server web pada port 8080. Anda kemudian dapat membuka browser Anda di <a>http://127.0.0.1:8080/</a>. Server web juga dapat diakses melalui jaringan menggunakan alamat 192.168.-.- Anda.</p> <p class='space'></p> <p>Ini adalah server default yang dapat Anda gunakan untuk mengunduh file dari mesin.</p> </section> <section class='tag' id='web_server_1'>	<h4>Web Server <a href='#web_server_1'><i class='fa-solid fa-link'></i></a></h4>	<hr> <p>Jalankan kode di bawah ini untuk memulai server web khusus. Untuk membuat server web khusus, kita perlu menggunakan protokol HTTP</p> <p class='space'></p> <p>Secara desain, protokol http memiliki permintaan “get” yang mengembalikan file di server. Jika file ditemukan akan mengembalikan 200.</p> <p class='space'></p> <p>Server akan mulai pada port 8080 dan menerima permintaan browser web default.</p> </section> </div> </div> </div> <div> <div class='respon'> <div class='readme'> <section class='tag'> <p class='space'></p> <pre id='code-1'></pre> </section> </div> </div> </div> <footer> <center><a href='https://pythonbasics.org'>Copyright https://pythonbasics.org, All Rights Reserved</a></center> </footer> ");
setTimeout(Rendering, 1000);
function Rendering() {
   var CodeDis1 = document.querySelector("#code-1");
var Code1= '<span class="green cmd"># Python 3 server example</span>\nfrom http.server import\nBaseHTTPRequestHandler, HTTPServer\nimport time\n\nhostName = <span class="blue">"localhost"</span>\nserverPort = 8080\n\nclass MyServer(BaseHTTPRequestHandler):\n    def do_GET(self):\n        self.send_response(200)\n        self.send_header("Content-type", "text/html")\n        self.end_headers()\n        self.wfile.write<span class="orange">(bytes("&lt;html&gt;&lt;head&gt;&lt;title&gt;https://pythonbasics.org&lt;/title&gt;&lt;/head&gt;", "utf-8"))</span>\n        self.wfile.write<span class="orange">(bytes("&lt;p&gt;Request: %s&lt;/p&gt;" % self.path, "utf-8"))</span>\n        self.wfile.write<span class="orange">(bytes("&lt;body&gt;", "utf-8"))</span>\n        self.wfile.write<span class="orange">(bytes("&lt;p&gt;This is an example web server.&lt;/p&gt;", "utf-8"))</span>\n        self.wfile.write<span class="orange">(bytes("&lt;/body&gt;&lt;/html&gt;", "utf-8"))</span>\n\n<span class="blue">if</span> __name__ == "__main__":        \n    webServer = HTTPServer((hostName, serverPort), MyServer)\n    print("Server started http://%s:%s" <span class="blue">% (hostName, serverPort))</span>\n\n    try:\n        webServer.serve_forever()\n    except KeyboardInterrupt:\n        pass\n\n    webServer.server_close()\n    print(<span class="green">"Server stopped."</span>)';
   CodeDis1.innerHTML= Code1;
}